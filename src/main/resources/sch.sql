CREATE TABLE IF NOT EXISTS mpa
(
    rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    name      VARCHAR(100)           NOT NULL
    );

CREATE TABLE IF NOT EXISTS films
(
    film_id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    name         VARCHAR(255)          NOT NULL,
    description  VARCHAR(200)          NOT NULL,
    release_date DATE                  NOT NULL,
    duration     BIGINT                NOT NULL,
    rating_id    INTEGER                   NULL,
    FOREIGN KEY (rating_id) REFERENCES mpa (rating_id) ON DELETE SET NULL
    );

CREATE TABLE IF NOT EXISTS genre
(
    genre_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    name     VARCHAR(255)          NOT NULL
    );

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id  BIGINT NOT NULL,
    genre_id BIGINT NOT NULL,
    FOREIGN KEY (film_id) REFERENCES films (film_id) ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES genre (genre_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
    );

CREATE TABLE IF NOT EXISTS users
(
    user_id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    login    VARCHAR(255),
    name     VARCHAR(255),
    email    VARCHAR(255),
    birthday DATE
    );

CREATE TABLE IF NOT EXISTS friends
(
    user_id   BIGINT NOT NULL,
    friend_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES users (user_id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, friend_id)
    );

CREATE TABLE IF NOT EXISTS likes
(
    user_id BIGINT NOT NULL,
    film_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES films (film_id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, film_id)
    );
